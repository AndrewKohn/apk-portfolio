import HtmlIcon from '../assets/svg/languages/HtmlIcon';
import CssIcon from '../assets/svg/languages/CssIcon';
import JavaScriptIcon from '../assets/svg/languages/JavaScriptIcon';
import TypeScriptIcon from '../assets/svg/languages/TypeScriptIcon';
import ReactIcon from '../assets/svg/languages/ReactIcon';
import JavaIcon from '../assets/svg/languages/JavaIcon';
import PythonIcon from '../assets/svg/languages/PythonIcon';
import NodeJSIcon from '../assets/svg/languages/NodeJSIcon';
import SassIcon from '../assets/svg/languages/SassIcon';
import GitIcon from '../assets/svg/languages/GitIcon';
import MySQLIcon from '../assets/svg/languages/MySQLIcon';
import TailwindIcon from '../assets/svg/languages/TailwindIcon';

// Project Images
import projectImage1 from '../assets/img/payroll-sorter-image.webp';
import projectImage2 from '../assets/img/pdf-word-converter-image.webp';
import projectImage3 from '../assets/img/mh-weakener-bot-image.webp';
import projectImage4 from '../assets/img/mgh-menu-image.webp';
import projectImage5 from '../assets/img/gpt-discord-chatbot.webp';
// import projectImage6 from '../assets/img/';
import projectImagePlaceholder from '../assets/img/ex-img.png';

// EXAMPLE DATA
// {
//   id: 5,
//   image: projectImagePlaceholder,
//   altText: 'exampleTitle',
//   title: 'exampleTitle',
//   description: 'exampleText',
//   tags: [],
//   gitHubPath: '',
//   liveSitePath: '',
//   moreInfo: {
//     purpose: ['purposeText'],
//     functionality: ['functionalityText'],
//     challenge: ['challengeText'],
//   },
// };

const PROJECTS_DATA = [
  {
    id: 0,
    image: projectImagePlaceholder,
    altText: 'MGH Daily Schedule',
    title: 'MGH Daily Schedule',
    description:
      'Shows night/day shift daily schedules as well as the monthly schedule.  Information is gathered through a MySQL DB and allowed users can post and/or update both daily and monthly schedules.',
    tags: [
      JavaScriptIcon,
      TypeScriptIcon,
      ReactIcon,
      SassIcon,
      NodeJSIcon,
      MySQLIcon,
    ],
    gitHubPath: 'https://github.com/AndrewKohn/mgh-daily-schedule',
    liveSitePath: '',
    moreInfo: {
      purpose: [
        'The main purpose of this project is to display a daily schedule for providing care to patients.',
        'Initially, the idea was to practice manipulating data through a relational database.',
        'With the daily life of patients changing frequently, creating a new daily schedule every time causes confusion among staff, especially new hires. Therefore, this project was created to provide a centralized version of the schedule that nurses can update on-the-go, making it easier to access the most updated version.',
        'Additionally, the scheduling sheet is centralized to help staff quickly gain an overview of the month and allow nurses to make adjustments as needed.',
      ],
      functionality: [
        'The project pulls data from a MySQL database and displays it in an organized and user-friendly format.',
        'Admin users can manipulate the schedules.',
        "The daily schedule shows the patient's hourly ADL's, and the user can highlight between houses and shifts they want to view.",
        ,
        "The monthly schedule provides a calendar view of the entire month and highlights between houses and shift times for both facilities' staff scheduling.",
      ],
      challenge: [
        'During the project, the main challenge was retrieving data from the database, which was not functioning correctly. It was discovered that resetting the MySQL server through Windows Services was necessary.',
      ],
    },
  },
  {
    id: 1,
    image: projectImage1,
    altText: 'Payroll Report Sorter App',
    title: 'Payroll Report Sorter',
    description:
      "A personal program to sort staff's time-clocks in payroll reports between multiple facilities.",
    tags: [JavaIcon],
    gitHubPath: 'https://github.com/AndrewKohn/PayrollReportSorter',
    liveSitePath: '',
    moreInfo: {
      purpose: [
        "The program concatenates multiple pdf's into one .txt file that groups staffs' hours by facility they worked at.",
        "If there is a discrepancy between clock-in or clock-out, missing times would display as a newly-labeled section underneath the staffs' hours.  Originally, the pdf reports show all discrepencies at the bottom of the file with all staff members grouped together.  This way, we can instantly detect who was supposed to work a certain day or if someone forgot to clock out.",
      ],
      functionality: [
        'The program will take in pdf reports generated by the charting system MGH uses and merges the files into a .txt file.',
        "Users can view hours worked, and in which facility.  If there are errors, like someone missed clocking out of their shift, it will display that underneath the staff's name.",
      ],
      challenge: [
        'I had to figure out how to read from a pdf file, to which I used pdfBox to assist me.',
        'The project introduced me to ArrayLists and maps.  So I utilized that when I want to display information in an easy-to-read format for the user.',
      ],
    },
  },
  {
    id: 2,
    image: projectImage5,
    altText: 'OpenAI Discord Chatbot',
    title: 'OpenAI Discord Chatbot',
    description:
      "A ChatGPT discord chatbot utilizing OpenAI's API with the ability to converse with multiple users within the server's channel & can respond to DM's.  To make it a bit interesting, the chatbot is role-playing as a caveman that values family-values and he also works in a call center for ChatGPT in the US.",
    tags: [JavaScriptIcon, NodeJSIcon],
    gitHubPath: 'https://github.com/AndrewKohn/gpt-discord-bot',
    liveSitePath: 'https://discord.com/invite/c27D5CXkA5',
    moreInfo: {
      purpose: [
        "I wanted to create a ChatGPT bot for discord for it's use when a user is away from their desktop or laptop.  It is a nice utility to have when you have a certain question on your mind and can return back to that question when you get back to your computer.",
      ],
      functionality: [
        "User's can interact and chat with OpenAI's ChatGPT API.",
        "User's can send/receive DM's.",
        "The chatbot will maintain current conversations between multiple users.  It won't deviate from a topic due to another user influencing the chatbot.",
      ],
      challenge: [
        "One issue I had was a relatively quick-fix, but it involved having the chatbot be able to read and store past conversations.  The issue was that it won't differentiate between different users, and will continue a conversation branch based on the past questions regardless of who asked them.  The fix I included into the code involved stopping the chatbot from responding if the author of the message is either not a bot itself, or if the current author of the current question is the same as the previous author of the previous question.",
      ],
    },
  },
  {
    id: 3,
    image: projectImage3,
    altText: 'Monster Hunter Discord Bot',
    title: 'MH Weakener Bot',
    description:
      "A discord bot that shows a brief overview of a monster's location, resistances, and weaknesses and any special conditions, if any.  Allows user and friends to be on the same page and to quickly optimize for a fight.",
    tags: [JavaScriptIcon, NodeJSIcon],
    gitHubPath: 'https://github.com/AndrewKohn/mh-weakener-discord-bot',
    liveSitePath: 'https://discord.com/invite/S5kHXjZfjJ',
    moreInfo: {
      purpose: [
        "The project is a Discord bot designed to provide users with a brief overview of a monster's location, resistances, weaknesses, and any special conditions that may be applicable during a fight. The purpose of the bot is to help users and their friends to quickly optimize their strategy for taking down the monster.",
        'The bot uses an API from https://mhw-db.com to retrieve information about the monsters. This information is then presented to the user in a clear and concise manner through the Discord bot.',
        'The bot may include various features that allow users to interact with it, such as using commands to search for specific monsters or filter by attributes such as location or resistance type. Additionally, the bot may allow users to save or share information about specific monsters with their friends, helping everyone to stay on the same page and work together more effectively.',
        'Overall, this project is a great example of how technology can be used to make gaming more enjoyable and collaborative. By providing users with the information they need to optimize their strategy, the bot can help them to achieve greater success and have more fun playing together.',
      ],
      functionality: [
        'The bot retrieves information about monsters, including their location, resistances, weaknesses, and special conditions, from a data source.',
        'Users can interact with the bot through commands to search for specific monsters.',
        'The bot presents the information about the monster in a clear and concise manner, allowing users to quickly optimize their strategy for taking down the monster.',
        'The bot can help users to easily access and share information, making it a useful tool for gamers who want to collaborate and strategize together.',
      ],
      challenge: [
        "A challenge I encountered was learning how to host the bot.  I ended up learning how to use Heroku's services and the Discord bot was properly working on different Discord channels.",
      ],
    },
  },
  {
    id: 4,
    image: projectImage2,
    altText: 'PDF to Word Converter App',
    title: 'PDF Word Converter',
    description:
      'A program that converts pdf <-> docx while maintaining proper formatting.  Used to help with my work involving editing .pdf files from time-to-time.',
    tags: [JavaIcon],
    gitHubPath: 'https://github.com/AndrewKohn/PDFWordConverter',
    liveSitePath: '',
    moreInfo: {
      purpose: [
        'This is a program that is designed to convert files between two formats: PDF and DOCX',
        "The goal of the program is to make it easy to edit PDF files, which can be difficult to modify without the right tools. By converting PDF files to DOCX format, the program allows you to make changes to the document using a word processor like Microsoft Word or Google Docs, and then save the changes back to PDF format when you're done.",
        'One of the key features of this program is that it maintains the proper formatting of the original file during the conversion process. This is important because many PDF files are complex documents that include images, charts, and other elements that can be difficult to re-create in a different format. By preserving the original formatting, this program makes it easy to edit the document without losing any of the visual elements that make it unique.',
      ],
      functionality: [
        'The program allows users to easily convert PDF files to DOCX files and vice versa while preserving the formatting of the original document. Users can simply select the file they wish to convert and the program will handle the rest of the conversion process. The resulting document will have the same layout, fonts, and formatting as the original document, making it easy for users to edit and work with the document in their preferred format.',
      ],
      challenge: [
        "One issue I had properly using the API.  There wasn't much information on StackOverflow so I spent some time studying its documentation.",
      ],
    },
  },
  {
    id: 5,
    image: projectImage4,
    altText: 'Morning Glory Homes menu site',
    title: 'MGH Menu',
    description:
      'This project allows the user to view/submit weekly menus. The live demo utilizes example menus for its showcasing.',
    tags: [HtmlIcon, CssIcon, JavaScriptIcon],
    gitHubPath: 'https://github.com/AndrewKohn/MGH-menu',
    liveSitePath: 'https://mghmenu.netlify.app/',
    moreInfo: {
      purpose: [
        'The menus at the facilities were originally written on paper and it got harder and harder to keep track of keeping the fridges and freezers stocked when everyone has a different idea for the meals to prepare each day.',
        'This was an early project I used to practice vanilla JavaScript.  Allows the user to submit a form that emails a JSON version of a new menu that can essentially be plugged into the code and displays the new menu.',
        'Menus for each facility is require by the state and they also assist with planning diet and ensuring not too much money was being spent buying too much of one ingredient.',
      ],
      functionality: [
        'Displays different types of menus.',
        'Dynamically changes class for hover effects.',
        'Users can submit new menus, or suggest portions of a menu, which is recieved in JSON and can be copy/pasted to create a new menu quickly.',
      ],
      challenge: [
        'This project helped me understand using js to manipulate the css styling.',
        'A challenge I faced was trying to bring the idea to life of trying to update the menu with new information, but I had to figure out how to remove elements already present in the document.',
      ],
    },
  },
];

export default PROJECTS_DATA;

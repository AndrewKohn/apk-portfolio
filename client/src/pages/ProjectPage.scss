@use '../styles/mixins';
@import '../styles/variables';

.project-page-container {
  @include mixins.DisplayFlex(flex-start, center, column, nowrap);
  @include mixins.AnimateFadeIn();
  filter: opacity(1);
  height: 100%;
  width: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  background-color: $primary;
  position: relative;

  .return-button {
    position: absolute;
    top: 0;
    left: 5%;
    transform: translate(50%, 10rem);
    background: none;
    border: none;
    cursor: pointer;

    .return-button-icon {
      width: 4rem;
      height: 4rem;
      color: $secondary;
      background-color: $primary;
      border-radius: 50%;
      transition: all 0.2s ease-in-out;

      &:hover {
        color: $accent1;
        background-color: $tertiary;
      }
    }
  }

  .project-page-bg {
    transform: translate(-50%, -50%) rotate(0);
    top: 0;
    width: 100%;
    background: linear-gradient(to top, rgba($accent1, 0), rgba($accent1, 0.6));
    animation: slide-from-top 1.5s ease;

    @keyframes slide-from-top {
      0% {
        transform: translate(-50%, -100%) rotate(0);
        filter: hue-rotate(-1.6rad);
      }
      100% {
        transform: translate(-50%, -50%) rotate(0);
        filter: hue-rotate(0);
      }
    }
  }

  .content {
    gap: 6rem;
    margin-bottom: 20rem;

    .project-info-img {
      @include mixins.DisplayFlex(flex-start, center, column, nowrap);
      width: 35rem;
      margin-top: 8rem;
      overflow: hidden;
      position: relative;

      &:not(:hover) .status {
        background-color: rgba($tertiary, 0.3);
        // filter: opacity(0.65);
        transform: translate(-3.2rem, 4rem);

        @media screen and (max-width: #{map-get($breakpoints, 'phone-lg')}) {
          background-color: rgba($secondary, 0.1);
          transform: translate(-1.2rem, -0.8rem);
        }
      }

      .status {
        @include mixins.DisplayFlex(center, center, row, nowrap);
        @include mixins.AnimateFadeIn(1s);
        pointer-events: none;
        gap: 0.8rem;
        position: absolute;
        content: '';
        top: 0;
        right: 0;
        transform: translate(-0.8rem, 2.4rem);
        padding: 0.2rem 0.8rem;
        border: 1px solid rgba($secondary, 0.75);
        border-radius: 5px;
        background-color: rgba($tertiary, 0.5);
        color: rgba($secondary, 0.75);
        letter-spacing: 1.2px;
        filter: opacity(1);
        transition: all 0.2s ease;

        .status-icon--online {
          width: 0.8rem;
          height: 0.8rem;
          border-radius: 50%;
          border: 1px solid rgba(240, 255, 255, 0.575);
          background-color: green;
          filter: brightness(1);
          @include mixins.pulseEffect();
        }

        .status-icon--offline {
          width: 0.8rem;
          height: 0.8rem;
          border-radius: 50%;
          border: 1px solid rgba(240, 255, 255, 0.575);
          background-color: darkred;
          filter: brightness(1);
          @include mixins.pulseEffect();
        }

        @media screen and (max-width: #{map-get($breakpoints, 'phone-lg')}) {
          top: unset;
          bottom: 0;
          background-color: rgba($secondary, 0.12);
          transform: translate(-1.2rem, -0.8rem);
        }
      }

      .project-info-image {
        width: 100%;
        aspect-ratio: 3 / 2;
        transform: scale(1.15);
        transition: transform 0.2s ease;
        margin-bottom: 1.2rem;
      }

      &:not(:hover) .project-info-image {
        transform: scale(1);
      }

      @media screen and (max-width: #{map-get($breakpoints, 'tablet-lg')}) {
        &:not(:hover) .project-info-image {
          transform: scale(1.15);
        }
      }

      @media screen and (max-width: #{map-get($breakpoints, 'phone-lg')}) {
        width: 100vw;
      }
    }

    .links-container {
      @include mixins.DisplayFlex(space-between, center, row, nowrap);
      width: 30rem;
      margin-bottom: 1.2rem;

      .links-wrapper {
        @include mixins.DisplayFlex(flex-start, center, row, nowrap);
        gap: 1rem;

        .project-link {
          &:visited,
          &:link {
            color: $secondary;
            transition: color 0.25s ease-in-out;
          }
          &:hover {
            color: $accent1;
          }

          &:hover .link-icon {
            border: 1px solid $accent1;
          }

          @media screen and (max-width: #{map-get($breakpoints, 'tablet-lg')}) {
            &:not(:hover) {
              &::after {
                // color: $accent1;
                transform: translateY(5rem);
                filter: opacity(1);
                z-index: 1;
              }
            }
          }
        }

        .link-icon {
          width: 4rem;
          height: 4rem;
          padding: 0.4rem;
          border-radius: 19px;
          background-color: $tertiary;
          border: 1px solid $secondary;
          transition: border-color 0.25s ease-in-out;
        }

        .live-demo {
          position: relative;

          &::after {
            position: absolute;
            content: 'Live Demo';
            bottom: 35%;
            left: 0;
            transform: translateY(0);
            text-align: center;
            background-color: transparent;
            z-index: -1;
            line-height: 1;
            width: 100%;
            filter: opacity(0);
            transition: all 0.2s ease-in-out;
          }

          &:hover {
            &::after {
              transform: translateY(5rem);
              filter: opacity(1);
              z-index: 1;
            }
          }
        }

        .github-url {
          position: relative;

          &::after {
            position: absolute;
            content: 'GitHub Repo';
            bottom: 35%;
            left: 0;
            transform: translateY(0);
            text-align: center;
            background-color: transparent;
            z-index: -1;
            line-height: 1;
            width: 100%;
            filter: opacity(0);
            transition: all 0.2s ease-in-out;
          }

          &:hover {
            &::after {
              transform: translateY(5rem);
              filter: opacity(1);
              z-index: 1;
            }
          }
        }
      }
    }

    .project-info-card {
      @include mixins.DisplayFlex(center, flex-start, column, nowrap);
      max-width: 80rem;
      gap: 1.2rem;

      .project-info-heading {
        @include mixins.DisplayFlex(flex-start, center, row, nowrap);
        gap: 2rem;
        margin-bottom: 2rem;
        .project-info-icon {
          color: $secondary;
          width: 2rem;
          height: 2rem;
        }
      }
    }

    .heading--purpose {
      color: #fcca46;
      .project-info-icon {
        color: #fcca46 !important;
      }
    }

    .heading--functionality {
      color: #a1c181;
      .project-info-icon {
        color: #a1c181 !important;
      }
    }

    .heading--challenge {
      color: #ff3b3f;
      .project-info-icon {
        color: #ff3b3f !important;
      }
    }
  }
}

.blurred--light {
  filter: blur(1.4px);
  cursor: not-allowed;
}
